// Code generated by Kitex v0.6.1. DO NOT EDIT.

package feedrpcservice

import (
	"context"
	feed "feed-service/kitex_gen/feed"
	client "github.com/cloudwego/kitex/client"
	kitex "github.com/cloudwego/kitex/pkg/serviceinfo"
)

func serviceInfo() *kitex.ServiceInfo {
	return feedRpcServiceServiceInfo
}

var feedRpcServiceServiceInfo = NewServiceInfo()

func NewServiceInfo() *kitex.ServiceInfo {
	serviceName := "FeedRpcService"
	handlerType := (*feed.FeedRpcService)(nil)
	methods := map[string]kitex.MethodInfo{
		"GetFeed": kitex.NewMethodInfo(getFeedHandler, newFeedRpcServiceGetFeedArgs, newFeedRpcServiceGetFeedResult, false),
	}
	extra := map[string]interface{}{
		"PackageName": "feed",
	}
	svcInfo := &kitex.ServiceInfo{
		ServiceName:     serviceName,
		HandlerType:     handlerType,
		Methods:         methods,
		PayloadCodec:    kitex.Thrift,
		KiteXGenVersion: "v0.6.1",
		Extra:           extra,
	}
	return svcInfo
}

func getFeedHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
	realArg := arg.(*feed.FeedRpcServiceGetFeedArgs)
	realResult := result.(*feed.FeedRpcServiceGetFeedResult)
	success, err := handler.(feed.FeedRpcService).GetFeed(ctx, realArg.Req)
	if err != nil {
		return err
	}
	realResult.Success = success
	return nil
}
func newFeedRpcServiceGetFeedArgs() interface{} {
	return feed.NewFeedRpcServiceGetFeedArgs()
}

func newFeedRpcServiceGetFeedResult() interface{} {
	return feed.NewFeedRpcServiceGetFeedResult()
}

type kClient struct {
	c client.Client
}

func newServiceClient(c client.Client) *kClient {
	return &kClient{
		c: c,
	}
}

func (p *kClient) GetFeed(ctx context.Context, req *feed.FeedReq) (r *feed.FeedResp, err error) {
	var _args feed.FeedRpcServiceGetFeedArgs
	_args.Req = req
	var _result feed.FeedRpcServiceGetFeedResult
	if err = p.c.Call(ctx, "GetFeed", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}
